#!/bin/bash

# This will unpack and configure the uniserverz from separate components.

dtd_build_win() {
  echo "Starting Windows build..."
  pushd $dtd_build_dir/tmp > /dev/null
  dtd_build_win_extract
  # Add the vhost configs
  dtd_build_win_tracks
  # Batch file generation
  dtd_build_win_bat
  # Additional configuration
  dtd_build_win_configure
  # Cleanup
  dtd_build_win_cleanup
  # Compress
  dtd_build_win_compress
  # We're done here.
  popd > /dev/null
  echo "Windows build complete."
}

dtd_build_win_extract() {
  # First extract the controller
  echo "Extracting UniServerZ components..."
  7z -o. x -y $dtd_build_dir/var/sources/win/ZeroXI_controller_*.exe > /dev/null
  mv UniServerZ $dtd_cfg_event_short
  cd $dtd_cfg_event_short
  # Extract Apache
  7z -o. x -y $dtd_build_dir/var/sources/win/ZeroXI_apache_*.exe > /dev/null
  # Extract mysql
  7z -o. x -y $dtd_build_dir/var/sources/win/ZeroXI_mysql_*.exe > /dev/null
  # Extract php
  7z -o. x -y $dtd_build_dir/var/sources/win/ZeroXI_php_*.exe > /dev/null
  # Etract phpmyadmin
  7z -o. x -y $dtd_build_dir/var/sources/win/ZeroXI_phpmyadmin_*.exe > /dev/null
  # Add composer
  echo "Extracting Composer and Drush..."
  cd core
  mkdir composer
  cd composer
  cp $dtd_build_dir/var/build/composer/composer.gz .
  gunzip composer.gz
  cd ..
  # Add Drush
  tar xzf $dtd_build_dir/var/build/drush/drush.tgz
  cd ..
  # Add all tracks
  echo "Extracting tracks..."
  unzip -qq $dtd_build_dir/var/build/tracks/$dtd_cfg_event_short-tracks.zip
  cd ..
}

dtd_build_win_compress() {
  cd $dtd_build_dir/tmp
  # Compress using 7z and max compression rate.
  rm dtd-win.7z
  echo "Compressing Windows environment..."
  7z a -mx=9 dtd-win.7z $dtd_cfg_event_short > /dev/null
  # Create a self extracting windows executable
  echo "Making executable..."
  cat $dtd_build_dir/lib/win/dtd.sfx dtd-win.7z > $dtd_build_dir/var/build/win/$dtd_cfg_event_short-win.exe
}

dtd_build_win_tracks() {
  echo "Generating Apache vhost for Windows..."
  default_vhost=1
  cd $dtd_build_dir/tmp
  echo "Include conf/dtd-vhosts.conf" >> $dtd_cfg_event_short/core/apache2/conf/httpd.conf

  for track in "${dtd_src_tracks[@]}"
  do
    # Then modify and add a vhost for each track.
    eval dtd_host=\$dtd_src_${track}_host
    # Use the default vhost template for the first defined track.
    if [ $default_vhost = 1 ]; then
      cat $dtd_build_dir/lib/win/default_vhost.conf | sed "s/_DTD_TRACK_/${track}/g" | sed "s/_DTD_HOST_/${dtd_host}/g" > $dtd_cfg_event_short/core/apache2/conf/dtd-vhosts.conf
      default_vhost=0
    else
      cat $dtd_build_dir/lib/win/vhost.conf | sed "s/_DTD_TRACK_/${track}/g" | sed "s/_DTD_HOST_/${dtd_host}/g" >> $dtd_cfg_event_short/core/apache2/conf/dtd-vhosts.conf
    fi
  done
}

dtd_build_win_bat() {
  echo "Generating Windows batchfiles for startup, stop and Drush..."
  cd $dtd_build_dir/tmp
  # Firt copy the stop and drush files.
  cp $dtd_build_dir/lib/win/bat/dtd-stop.bat $dtd_cfg_event_short/$dtd_cfg_event_short-stop.bat
  cp $dtd_build_dir/lib/win/bat/dtd-drush.bat $dtd_cfg_event_short/$dtd_cfg_event_short-drush.bat
  cp $dtd_build_dir/lib/win/bat/drush.cmd $dtd_cfg_event_short/core/drush/
  # Then transform the start file
  cat $dtd_build_dir/lib/win/bat/dtd-start.bat | sed "s/_DTD_PASSWORD_/${dtd_cfg_auth_password}/g" > $dtd_cfg_event_short/$dtd_cfg_event_short-start.bat
  mkdir $dtd_build_dir/tmp/$dtd_cfg_event_short/core/drush/aliases
  touch $dtd_build_dir/tmp/$dtd_cfg_event_short/core/drush/aliases/aliases.drushrc.php
  for track in "${dtd_src_tracks[@]}"; do
    # Now add an db section for each track
    eval dtd_dump=\$dtd_src_${track}_sql
    cat $dtd_build_dir/lib/win/bat/dtd-init.bat | sed "s/_DTD_DB_DUMP_/${dtd_dump}/g" | sed "s/_DTD_USER_/${dtd_cfg_auth_user}/g" | sed "s/_DTD_PASSWORD_/${dtd_cfg_auth_password}/g" | sed "s/_DTD_DB_/${track}/g" >> $dtd_cfg_event_short/$dtd_cfg_event_short-start.bat
    # And add a section to the site alias drushrc file.
    eval dtd_host=\$dtd_src_${track}_host
    cat $dtd_build_dir/lib/win/site-alias.php | sed "s/_DTD_TRACK_/${track}/g" | sed "s/_DTD_HOST_/${dtd_host}/g" >> $dtd_cfg_event_short/core/drush/aliases/aliases.drushrc.php
  done
  cat $dtd_build_dir/lib/win/bat/dtd-init-done.bat >> $dtd_cfg_event_short/$dtd_cfg_event_short-start.bat

}

dtd_build_win_configure() {
  echo "Configuring Windows environment..."
  # Copy over ini files.
  cp $dtd_build_dir/lib/win/us_config/*.ini $dtd_build_dir/tmp/$dtd_cfg_event_short/home/us_config/
  # Set password file.
  echo $dtd_cfg_auth_password > $dtd_build_dir/tmp/$dtd_cfg_event_short/htpasswd/mysql/passwd.txt
  # Copy favicon
  cp $dtd_build_dir/lib/media/favicon.ico $dtd_build_dir/tmp/$dtd_cfg_event_short/home/us_config/
  # Copy proxy definition file
  cp $dtd_build_dir/lib/win/dtd.pac $dtd_builddir/tmp/$dtd_cfg_event_short/home/us_pac/
  # Add a file to check if the db import hasn't happened.
  touch  $dtd_build_dir/tmp/$dtd_cfg_event_short/tmp/fresh_install.txt

}

dtd_build_win_cleanup() {
  cd $dtd_build_dir/tmp
  # Remove Uniserver readme files.
  rm ZeroXI*read_me.txt
  rm $dtd_cfg_event_short/ZeroXI*read_me.txt
  # Remove www.
  rm -R $dtd_cfg_event_short/www
  # Convert batchfiles to DOS line endings
  unix2dos $dtd_cfg_event_short/*.bat
}

#!/bin/bash

# Routines to create a generic dtd-tracks.zip for use in multiple targets.

dtd_build_tracks() {
  # Create or clean up tmp tracks directory
  if [ -d "$dtd_build_dir/tmp/tracks" ]; then
    rm -R $dtd_build_dir/tmp/tracks/*
  else
    mkdir $dtd_build_dir/tmp/tracks
  fi
  tracks=( $dtd_src_tracks )
  for track in "${tracks[@]}"; do
    # Check the source method
    eval track_method=\$dtd_src_${track}_method
    if [ $track_method = "git" ]; then
      # Export the git repo
      eval track_dir=\$dtd_src_${track}_dir
      eval track_branch=\$dtd_src_${track}_branch
      pushd $dtd_build_dir/var/sources/tracks/$track_dir
      mkdir $dtd_build_dir/tmp/tracks/$track
      git archive $track_branch | tar -x -C $dtd_build_dir/tmp/tracks/$track
      popd
    else
      mkdir $dtd_build_dir/tmp/tracks/$track
      eval track_dir=\$dtd_src_${track}_dir
      if [ -d "$dtd_build_dir/var/sources/tracks/$track_dir"]; then
        cp -R $dtd_build_dir/var/sources/tracks/$track_dir/* $dtd_build_dir/tmp/tracks/$track
      fi
      if [ -d "$dtd_build_dir/var/sources/tracks/$track"]; then
        cp -R $dtd_build_dir/var/sources/tracks/$track/* $dtd_build_dir/tmp/tracks/$track
      fi
    fi
  done
  # Create dtd-tracks.zip
  rm $dtd_build_dir/var/build/tracks/$dtd_cfg_event_short-tracks.zip
  pushd $dtd_build_dir/tmp
  zip -r $dtd_build_dir/var/build/tracks/$dtd_cfg_event_short-tracks.zip $dtd_build_dir/tmp/tracks
  popd
}
